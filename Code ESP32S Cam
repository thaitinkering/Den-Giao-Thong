#include <WiFi.h> 
#include <esp_camera.h>

// ⚙️ Thông tin mạng và server
const char* ssid = "Dong Bui";
const char* password = "123456789";
const char* server_ip = "192.168.1.165";
const uint16_t server_port = 9999;

WiFiClient client;
unsigned long lastReconnectAttempt = 0;
const unsigned long reconnectInterval = 5000;

// ✅ Tính checksum đơn giản
uint32_t calculateChecksum(const uint8_t* data, size_t len) {
  uint32_t sum = 0;
  for (size_t i = 0; i < len; ++i) sum += data[i];
  return sum;
}

// 📷 Cấu hình camera cho AI Thinker
void setupCamera() {
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = 5;
  config.pin_d1 = 18;
  config.pin_d2 = 19;
  config.pin_d3 = 21;
  config.pin_d4 = 36;
  config.pin_d5 = 39;
  config.pin_d6 = 34;
  config.pin_d7 = 35;
  config.pin_xclk = 0;
  config.pin_pclk = 22;
  config.pin_vsync = 25;
  config.pin_href = 23;
  config.pin_sscb_sda = 26;
  config.pin_sscb_scl = 27;
  config.pin_pwdn = 32;
  config.pin_reset = -1;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;

  config.frame_size = FRAMESIZE_240X240;
  config.jpeg_quality = 10;
  config.fb_count = 1;

  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("❌ Camera init failed: 0x%x\n", err);
    ESP.restart();
  }
}

void setup() {
  Serial.begin(115200);
  Serial.println("🔌 Đang kết nối WiFi...");

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\n✅ Đã kết nối WiFi");
  Serial.print("📍 IP: ");
  Serial.println(WiFi.localIP());

  setupCamera();
}

// 📤 Gửi 1 ảnh qua TCP
bool sendImage() {
  camera_fb_t *fb = esp_camera_fb_get();
  if (!fb) {
    Serial.println("❌ Không lấy được ảnh");
    return false;
  }

  uint32_t img_len = fb->len;
  uint32_t checksum = calculateChecksum(fb->buf, img_len);

  // Gửi độ dài, ảnh, checksum
  bool success = client.write((uint8_t*)&img_len, 4) == 4 &&
                 client.write(fb->buf, img_len) == img_len &&
                 client.write((uint8_t*)&checksum, 4) == 4;

  esp_camera_fb_return(fb);

  if (!success) {
    Serial.println("⚠️ Gửi ảnh thất bại");
    return false;
  }

  return true;
}

void loop() {
  // 🔁 Kiểm tra WiFi
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("📴 Mất WiFi. Đang reconnect...");
    WiFi.disconnect();
    WiFi.begin(ssid, password);
    delay(1000);
    return;
  }

  // 🔄 Reconnect TCP nếu mất
  if (!client.connected()) {
    unsigned long now = millis();
    if (now - lastReconnectAttempt > reconnectInterval) {
      Serial.println("🔄 Thử kết nối lại TCP...");
      client.stop();
      if (client.connect(server_ip, server_port)) {
        Serial.println("✅ Kết nối TCP thành công!");
      } else {
        Serial.println("❌ Kết nối TCP thất bại.");
      }
      lastReconnectAttempt = now;
    }
    delay(50);
    return;
  }

  // 🚀 Gửi ảnh nếu kết nối ổn định
  if (!sendImage()) {
    client.stop();  // sẽ reconnect ở vòng sau
  }

  delay(30);  // tránh nghẽn buffer
}
