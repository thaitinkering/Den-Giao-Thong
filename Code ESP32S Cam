#include <WiFi.h>
#include "esp_camera.h"

// ===== PHẦN 1: Cấu hình WiFi và chân camera cho ESP32-CAM AI Thinker =====
const char* ssid = "wifi-noi-bo";       // 🔁 Đổi tên WiFi tại đây
const char* password = "85898589";      // 🔁 Đổi mật khẩu WiFi tại đây

#define PWDN_GPIO_NUM  32
#define RESET_GPIO_NUM -1
#define XCLK_GPIO_NUM  0
#define SIOD_GPIO_NUM  26
#define SIOC_GPIO_NUM  27

#define Y9_GPIO_NUM    35
#define Y8_GPIO_NUM    34
#define Y7_GPIO_NUM    39
#define Y6_GPIO_NUM    36
#define Y5_GPIO_NUM    21
#define Y4_GPIO_NUM    19
#define Y3_GPIO_NUM    18
#define Y2_GPIO_NUM    5
#define VSYNC_GPIO_NUM 25
#define HREF_GPIO_NUM  23
#define PCLK_GPIO_NUM  22

// 4 for flash led or 33 for normal led
#define LED_GPIO_NUM   4

WiFiServer server(9999);               // Tạo TCP server cổng 9999
WiFiClient client;                     // Biến client toàn cục để giữ kết nối

unsigned long lastSendTime = 0;
const int sendIntervalMs = 100;        // Gửi ảnh mỗi 100ms (10 ảnh/s)

// ===== PHẦN 2: Khởi tạo camera =====
void setupCamera() {
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer   = LEDC_TIMER_0;
  config.pin_d0       = Y2_GPIO_NUM;
  config.pin_d1       = Y3_GPIO_NUM;
  config.pin_d2       = Y4_GPIO_NUM;
  config.pin_d3       = Y5_GPIO_NUM;
  config.pin_d4       = Y6_GPIO_NUM;
  config.pin_d5       = Y7_GPIO_NUM;
  config.pin_d6       = Y8_GPIO_NUM;
  config.pin_d7       = Y9_GPIO_NUM;
  config.pin_xclk     = XCLK_GPIO_NUM;
  config.pin_pclk     = PCLK_GPIO_NUM;
  config.pin_vsync    = VSYNC_GPIO_NUM;
  config.pin_href     = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn     = PWDN_GPIO_NUM;
  config.pin_reset    = RESET_GPIO_NUM;

  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;

  config.frame_size   = FRAMESIZE_QVGA;       // 320x240
  config.jpeg_quality = 12;                   // Giảm nhẹ để tốc độ cao hơn
  config.fb_count     = 2;
  config.grab_mode    = CAMERA_GRAB_LATEST;
  config.fb_location  = CAMERA_FB_IN_PSRAM;

  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("❌ Camera init failed: 0x%x\n", err);
    return;
  }

  Serial.println("✅ Camera đã sẵn sàng!");
}

// ===== PHẦN 3: Kết nối WiFi =====
void setupWiFi() {
  Serial.println("📶 Đang kết nối WiFi...");
  WiFi.begin(ssid, password);
  WiFi.setSleep(false);

  int retry = 0;
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    retry++;
    if (retry > 30) {
      Serial.println("\n❌ Không kết nối được WiFi!");
      return;
    }
  }

  Serial.println("\n✅ Đã kết nối WiFi!");
  Serial.print("📍 ESP32 IP: ");
  Serial.println(WiFi.localIP());
}

// ===== PHẦN 4: Gửi ảnh qua TCP giữ kết nối liên tục =====
void loop() {
  if (!client || !client.connected()) {
    client = server.available();
    if (client) {
      Serial.println("📥 Client đã kết nối.");
    }
  }

  if (client && client.connected()) {
    unsigned long now = millis();
    if (now - lastSendTime >= sendIntervalMs) {
      lastSendTime = now;

      camera_fb_t *fb = esp_camera_fb_get();
      if (!fb) {
        Serial.println("❌ Không lấy được ảnh!");
        return;
      }

      uint32_t imgLen = fb->len;
      client.write((uint8_t*)&imgLen, 4);       // Gửi độ dài ảnh (4 byte)
      client.write(fb->buf, fb->len);           // Gửi ảnh JPEG
      Serial.printf("📤 Đã gửi %d bytes\n", imgLen);

      esp_camera_fb_return(fb);                 // Trả lại buffer
    }
  }
}

// ===== PHẦN 5: Khởi động chương trình =====
void setup() {
  Serial.begin(115200);
  delay(500);
  Serial.println("🚀 ESP32-CAM AI Thinker đang khởi động...");

  setupCamera();    // Camera init
  setupWiFi();      // WiFi connect
  server.begin();   // Bắt đầu TCP server
  Serial.println("📡 Server TCP sẵn sàng chờ kết nối!");
}
