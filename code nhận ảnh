import socket
import struct
import cv2
import numpy as np
import time

def receive_all(sock, size):
    data = b''
    while len(data) < size:
        packet = sock.recv(size - len(data))
        if not packet:
            raise ConnectionError("Mất kết nối hoặc thiếu dữ liệu")
        data += packet
    return data

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind(("0.0.0.0", 9999))
server.listen(1)
print("🟢 Đang chờ ESP32 kết nối...")

client, addr = server.accept()
print(f"✅ ESP32 đã kết nối từ {addr}")

frame_count = 0
start_time = time.time()

while True:
    try:
        raw_len = receive_all(client, 4)
        img_len = struct.unpack('<I', raw_len)[0]

        img_data = receive_all(client, img_len)
        checksum_recv = struct.unpack('<I', receive_all(client, 4))[0]
        checksum_calc = sum(img_data)

        if checksum_recv != checksum_calc:
            print("❌ Checksum lỗi – bỏ frame")
            continue

        img = cv2.imdecode(np.frombuffer(img_data, dtype=np.uint8), 1)
        if img is not None:
            cv2.imshow("ESP32 TCP Stream", img)
            frame_count += 1

        if cv2.waitKey(1) == 27:
            break
    except Exception as e:
        print(f"⚠️ Lỗi: {e}")
        break

elapsed = time.time() - start_time
print(f"Tổng số ảnh: {frame_count} – FPS: {frame_count / elapsed:.2f}")

client.close()
server.close()
